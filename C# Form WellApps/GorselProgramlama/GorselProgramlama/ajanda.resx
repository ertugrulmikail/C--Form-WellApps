<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA0HAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABvuSURBVHja7Z0JuCRVdceru6vrLTMDw444A7KKIiiLBBWCqCiJCAKiouJOJAGXiICK
        BgQ3QGQJogaJ4B6CKLgQUUFFRUACKhoVhQgIRIFBQPYZck7VuV23+1X1WtXLe7/f953vgdLVt6vu/de9
        555zbhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwFhQFQvFamL1oIIt
        EEued/LcYQFSEYu8DjElUiB/l4htLvYssReI/R02b2wPsV3FthJbU7uA/+xDhsTCoeVtUBfbUexYsUvF
        bhL7i9gD2Lyze8VuFbtC7DQT+cV+f4B5TvrWj9/424idKfYnscewBWcqCBeKPU+WAzV/eQDz+80fir1a
        7HoGASZ2h9jRYqulfQTm5eCXtV4kfw8Xu4eOj3n2qNi/qX+A5cA8I2wIQOz4OUTsvg6dQdeLK8Tu7MNU
        WFZlXPNhsbv6vGYZdrfYypyBsGIM2vdAzrP5a5/Xu6uL567P7XSxWURgHjGTTv2fI3Z7zsPXAfpjsfeI
        /b05Bnfo0bYVO1TswYzrXyW2i9j2fVy3aNtO7CU5vg91gu454nbqd38x5zmdZu3v9ZpPF3uu2FvEvmHr
        /6zrP2gvCQRgfr39K2uIXZzz0G+xjrFONPge8/PE7s/4jkuiIJgeo73wLcT+mNHO68Og8vhRti1KHLQn
        5zyrw6OBrh3PBBfJP+8ndk3Od/zOtgul/yAC82X9f6DYQxkP+wbdI7Y4gPiBR30+dPue57cRgEXR+NyP
        J7URgA1H1fHDeMZW1/adkjM4j+z3+dS8328iooP8Bznf85FkyQgTPwMQ0zXd1zMesq7XX55sCQYDe34R
        gPEWgJY+4e7D9vbGb/2e34ptzI7ABDOVPuSn5qz9PyM2VdRDRgAmQwCUyATf4kHekeEQfUTsAL1X0wyl
        ySRqnv4/2vKA77PwUBGKSpEDCwGYAAFo6R+b5swCPlqXhQNhwhO79m8o/PsyHu51YhtoB6gWO7AQgAkR
        AO9eaGzIeRnfdaGbIcJErv8rwaLkIZ+R8XAvTvZ7Cx9YCMBECUDjJXFixnddZgliDKbJFICqPLrZwCK8
        5qh7TdS9VvzbBAGYIAFIlgKVvFni5WKrIwAIAAKwMAXgJ2JLEQAEAAFAAAABmHwBCBEABAABKFYAwrgT
        Vd3A2j1HAC6VwT9TtwE4Krww2ie2EYBl4Qhi4cPme5knAEdEtnMTIgAwDgLgDf7HiX0qJ8tOK9EcEHqF
        J0Y4+DXv/ZicjDtNkjlMbGaY7XSDfzqo6Xc+U+zqHAG4RAu56D3X0N4qAgCjFAAv0URjCi7okG6qabYH
        hxZjHg71XjTaqSWwPmaRbnnt1JyJD7o98LKXLdPN91KTqX7f4T5eaxl+slwIEQAYuQDUkuSRrgpP3GZF
        R+P952EKgHX0Qyz1uVM7/+pCYadKn5k07uMysSu7vI8XWYYnAgCjEYA10467taUUd1t95kwTjaHdC2vn
        emI/7aGd33VlsoYkAIfmFFPJy9vfHwGAkQlAPe24r8tZ9+fZL8TWH4EA7NpjKTQtGPK0sttpmZhanfnc
        Hst4nRYUsJRCABCAATpu7AA8qseOe4t54YctAC/tsPZvtfttV6P05yS2pE1ufp6dlwgHAgCjnQG8vceO
        e6PYJiMQgL1yypXl2T1WxmwYbZttU7Epzz4bxbsqCACMQACqaefdw5xmvaytl4xAALbq0VfxG7ENh7EE
        WJK08eQeBeCIInYpEAAEoC+88wTXEvt+l51WfQWHRkM+gMLKnWna6zk9DLBTpJ3VaHhOwN2sem83bbvJ
        Cr0MvEuBACAARbxdtZLun7vouF8TW9vOKBiiADSClbazN3undl5thUODaAgzgCj5HnUEntDFToBuYx4u
        T7cSsgsAoxSA0Dqw/K1a5aEb2xw8cYEdPlpYFaJelythGmxzbZsBpuXRd3Iht8OYqURpnILu7Z/apob/
        iiSKMa7zGCAAMAYzAFdpNg5j3TYpJRUHtNxgb9tvir3JnTqzOA5jHX6naimRvakdh3WZlcO63g5HPVJs
        uZuhDHOWkoZUx+XT9xH7klVu0vv4M7GzLdkqLDJMGQFAAAodXJXkBCId7E+w6LbZ9CjqykgGf3M7A/+A
        VC14sVE9zgAMlrjy6IuDYCTVcFtq/kcWL6H3cV1/4Bc5KBEABKDQzhTOfdvGjq5ojO5N1qEZoTkmR10E
        U516q+e0cc0S0pMQAAQAFjAIAAIACAACgAAAAoAAIACAACAACAAgAAgAAgAIADcJAQAEAOaTAFwgjzXM
        2mvGFpaZAByNACwsAdDiE8+w8+GxhW3b5vQRBGAeC4BWvr0Tw8TuyDnLAQGYxwKAYZ0MAUAAMAQAAUAA
        MAQA5pUAPGpHY2HYAznVkhGAeSwA+nBfFAaVF4jtgS1o0yIjn0MAFl4cQI19cKxOHMCCFAAiASGGSEAE
        ABAABAABAAQAAUAAAAFAABAAQAAQAAQAEABuEgIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACADM
        UwGoB0Hm6b+DW1DIubfltM0dbV4r5OTg0H5nWfcwRACgDAFwHU0+UZG/m4vtL3bQAPZGsX3EnlCXtg56
        7n0l7syN60yL7ST26gHb+Hqx57qBUJXvqA3wTNwx5Mkx6pV15N/3EHvDgG18pdh2IgB1dw+nEQAoUgCi
        hgAEkfw9VOx3Yg+LrRrQtDrxL3WgRlafoDbA4DJ7vNiZVu12ZQFtvFfsIh1k0QCDIbS3v4nUrlaa/f4C
        2qfVnW4XO0lsTScyCAACULAAxB33QLH7Sqg/p+WpX1gfaIDFHX9GrnFWSTXyfii2rJ9ptls+mUBtKXZd
        SW08PowPfGEGgAAUKADWcbUzfL/EIpTn29R9kBnAzmIrSmqfvm0PjvoUgDBdohxd4j28WWyrOjMAKEEA
        thC7pcTO+yuxx/XT4dIlSuxXWFViG8+Yte/rbwYQr9O/XGL7dEm1FwIABQuAvrmqT5bP3VZi571eBsiG
        9T5+61QqAIeUXCr736V91Xr/AjAl1/h6ie17JEycswgAAoAAIAAIAAKAACAACAACgAAgAAgAAoAAIAAI
        AAKAACAACAACgAAgAAgAAoAAIAAIAAKAACAACAACgAAgAAgAAoAAIAAIAAKAACAAgAAMSwCWDygA/1Sy
        AJwVxQVRBhKAr5XYPq3RsB8CAGVkA8rgrPymxM57RWQFLXqllrZxfxsEZbXxA2Eshv0JQBjPHkqrV/CY
        FS95NgIAhQuAdJRQ/n68xM57bL+1Ab104I3EflFS++4S202/Z3FfT6RRseglVgmojDZqlaG1EQAoVACm
        0s67hXWyojvu16yUV9Bv2a3IfrNc46Vitxbcvr+KvUes3u+AqKYiNSt2suXuF9lGLdO2e69l1RAABKAr
        NgrWdBVtniB2jNh3xa4c0C4WO1ILgURx5d1q37/XzQLCoKZFS/9W7FNiPxK7qs+2XWWD4FxbWkwNWrjU
        fT4MKovl72vFvqpLnwHun7bxMrHTxbZfLHfB1R5EABCAQgVAO9asdJfkDVPTv4vE1gj7tHpis1NWyVf/
        1gb8zS2lsrXI6GoDtlEHQBR51w0KaGOYCoGKytJwsDYuqSeVmuP7R1lwKEUAnLNtqnnN7Ypx9mzu8zW7
        bljQ79Y5xCKvzHgRbXS/PSiwjRV7UxfRvro9k37aiAAgALCAQQAQAEAAjkUAEABYuAJwqAV5PejHZSAA
        CADMc8yPoLsST7aS4v8i9k0rX746AoAAwPwXgIbZVq+esLRBGAS1kFuEAMBC6C9JwJd/wnIYFLc7AwgA
        ACAAUCZpjEHgTeub/7rYARfXAQgATOhg3yRY3hIUlAYvWe7CbJRERC6NEqfeonpQjVz0YKu5QC9AAGAM
        Sd7czWt1G+waFryN2L5iR1h+wH9avoXmC1xuR5x/R+wr1i/eK/ZKsR3F1rXw6cZ115A+VOWWIwAwLgO/
        6g/6itVo0AIgp9kAv72PLMNHxe4UuyapeBQnKWnWZ+i+qxrgDEQAbL1oiUCt20Y9WetnpuK2FjdQ/Ldj
        ERY2rjl8KkHQunbXdOJdxU61I9WLTitWQbhR7GyLC1jqvntmgISt0HwOzmDCBCD0BlaUZLFp8Y0tZTBv
        qX97Me8zy2X9Wo/iaw6+9mwZuLre3azfNtaTz+ibcJ2lIlFFZQP2/nsCf+DvKXa+FSd5bAimdRAuEXt1
        3ao1+bOCbqjFz7XqPlOTf68iABMmAJEN/ih5+/+N2BesAMWtA9gfrcSYlsjaOjQRGHTwh0ndPe2w3xO7
        acA23iL2U7F3uQEQDUEEoqaZVlxGbGerS3DvkAZ+qz1kvoO9XV2EbuoOeP6JwCoVbUVw0QQKQJhO2Xcq
        qS7g1RaKGr8t+vu9mlpc0XXx2+zNVWT7Vol90moglL7WT9/6lfXFjrO1fbdtvcfE+fti/yH2MbEP23U+
        aEuHz4p9W+yXtv5f2cO1tT89UUuPtBOAltnY5lawdQP990UMz8kSAOuU09ahynrLnC4dqtrPAFsv7XBP
        EvvfktqndfxeXOYMIB0w8dt/Z5t+r+rQLh28f7DY/X+2oqBatWmJzCTCtYLFXv0GLeoS/61ZabINbEb3
        RnMAdutTuFZsh7xn1TL49aXxaf2eCKfzpApA/CA3FruhRAFQL/Q6/QiA98Z8lTmxymrjSTPx5LzMwR/o
        3v3rbfnSzfpcz0LY0pY+LYMv9d67Z11tvl+tFZR0V+Hltn14R5vS42dqGbfWZ+VVZ3a/aW/LKjwgsmUD
        24oTKQATcy5A2QeDnNXvwSCd729c5WfW9ubbrfUfsGy9fX0PfWi+g+keBbSe8dY2MdnZZgW+w/FusaPc
        UshfrlWar6EidrD5eY5J1v2VkeyiIACcDDQWJwN1dl5WNSX3xA5TcJ0lvcZqHc55yxfhf5iS97hXqkwH
        8vPE/sv8CgeGyfKhaScg9Dz91rb325LpC66tIdN/BAAByBv88ZtfB/8jbab7Z4ht4sdOlOWQdFN5L8R4
        LV1mqDS0bofWGwIQ/++Pt/iBVVZRaBO3czLNkEQAEIAsv0UQ2rQ/782vW5EH+WXJhxWP4A3sIOu7W/73
        rcW+ZW2+yUqzs+pHABCAvK2+qeSN+jrbXsv6Pt2me/60F305Myb9K50hxP/8HNsZ0Dbfp07MKPVrMBgR
        AASg9dlYe3du4+3X9f5OaVjzeOB7+muJP+BV3m/QLcnjbSdj6JGTgACMvQB4U+r1bRsv782/k75FwyFF
        H/Z4n90RZ3qq0wqv3V8xfwGDHwFAAFqZMQGIkoCnY3OCfHTN/3yX9jsucfO15nW/xmv8a4vf4loLxMLp
        hwAgANnPpPH2fFZOeK96+w+atq24cVk/t2RYbmYJSb546W/ZI1kWsO5HABCATI+6reVn2oRUf7zeiOgb
        H2dfYlUX1nt5RmDSm/2tQ/83+2nAgAAsWAHw1v4vzPH6Xxt6++bNn3XnMQaNcwDLZtob/NWgqklWLxb7
        bUa7P2ZlxJvW/f75herLiNgORAAWqgCE6eCdsaSd1us+mET4VeP/rjpHPBoCMF33tgTLoiWsN7L7+qeM
        dn/LnJlN7XHJR/ZcnuHyBkgDRgAWqAA0BtPf5hTzuMidwlPPnD00ft/2uuduac/2di263yThwF5RlQ/l
        pFf/WmxbN2OZmrPUabT3l5YXwDJgcgUgfpibWtppWYPrF2LrDZgN+Noectv7sVNVCnsVgFpaw++UnDTj
        /ZIgn6iTwOkW22f0LL/QIgN18BVXTq0psm+51Q3Iyq6805KR2kUHbmBFRB6zwqRL2BqcbAHQDLCvlzi4
        zrYsskE677YlzlI0DfYVvbbPm04vs7dh63UvTbP68plNg4f2sen4R1yVoqAAJ1vYPFN5qjd4s+7DO13t
        hqhp8Ff9GIFPep/RWIFd6mMU04AA9FgT0B7sC0oaYL83D3Pc0fsTgMDF1b+/pJoAX7bS2/2K074tp++6
        SkNv7mZ9HKaONR1c59nnz7NqOwMd4+Xe2rNJaPLuYj9vcx8+HSaHic7xQ9hugQrDYRm5Dcc4HwdMmADU
        rHNVkmnsi6ze3h2Wtz6I/cnWv8+ekZYO4iTyTsHR9NN3WnWbuwds3z1WYUhr7G/Yj/PNy7c/NeM53OSC
        Z8Iun6m1YTebhus1rlTfwlQfzsF601s7Dut9jQUi5Q3+y6wYbOb3eDPFizM+e0kUVyliBjCRM4Cw2cGz
        hjl4nj2gPS3NbR88r91zjLma+c8csH27JG/YJLZd7+lUf23SKf6PMp7D+bqWD7uuzdhUNehM7zrqmznQ
        r+Xf6V5Wg6atyUVW6OMvbQb/jXY/rWRZW0F5X8bnb7OMQQbnJAqA64CVoNia+86TXVTHaCmqWZAFQb9e
        bC9VNmvpdFivGXPeoN3BKu64a+ngPdo528KcQerukSfm6yYBSPHavl0x0APDxvmCHdu2u2UF+td4xMqN
        BSsYnpMpANAbM+kg2ydjTXyvTeX7WFY08glOzBhk57jlSlY4cSpo8Ztazz24sIuio+8PbXbRbgpfTX/v
        8pzq0cclCU6AACyIZ9AYEO/IcXxuPIBTMbBDTK7PuLb6aJ5eTx2HTZ8L03yEK7pwfp7rnJ/dtNX+u2mr
        W9h6rS+5ZQogAPOe5E2r7s347L45DjUZiKv1mzgTxhl38Vv8qJysQg3b3TdMDhbxaw+qf+QlJkCdBv9P
        bZYQzxi6F71q7m92Ph9AABbAM4jftmFO8s+5Mljqg27d2XT/2pwBfIf5GWZt6q/BQ29tU/Lbtz9aQdBG
        Qk+P7To845q/yionDiV1viDYLDAHz5zQU/n/Z0jbLHsGEA+EGauqOyfzL6mlWxng+o2twUPaFBR90LYx
        dbvxBIs87OYQlIOjOOqxt8xEb9mTFZX5B0snpnMMZ/oZd44PZTzg/+73EA7oWQCW2DFdrc/ghLpV/Bns
        GTcKdPywgyPvxg6efj846RS/CGmfv3u/jO/TnZCt6HdDE4D4QfxDxhrxLnMCUbqp/GewWk4MwAeLioyz
        5/hKy80fNOLxG7Y1GAwYlr13xs6HBn5tQ58bAl4+9zNyMtBOqicOIUSg/BnADzLu/4frBWyJefH7q+V4
        3nux69wArQ+Qv++FPrfOALRy0FPob8PtgEtzOqBOx3YtK60UAj8xJis09vS1g2AgH4BjKhWBPduUGO9k
        fxbby81K+p2ZeFWDs85pvNntKsAQ8MI935azVfQTtyZzlVvI2S6OMD1eK6sIyOeTM/OKec62v68Oxy/2
        Mfh1qn5YmIRQB4NVPW4IwFszvuc3lhVJ5xgGnhovN8df1sO/Sgs6Wkf1k2qwHq31zWnVfXRQfSLjvn/X
        HbJZzGyj6hcd+XOPAnCma8ug7UlKlsVtOT7je67oN6MS+n4YDRF4RUZ8tl/g4WwLWdUp2vrSodfFurb1
        xFZvTcn1tsSOyrjn/2Nn6RUs9nFK9Cd6GPyXurdyEW0xEazbEeOt33WB212A4XqiXW23EzpUzHnQ1mnq
        DPoZ1rVdZ8UxI79zL0/v/QEZ+/QrzEEbFH3YqBVGubmLwa8n/u6Y1O+rFVK209uWzJpxnhzGNQdgFM4o
        vfFLrVJLGQUzFrppNN7a2UUy4sy9OzL2299UdLFMu14lJ/7Dt7uT7Lxqo2jp4D6Pxu/d0atX4P/eg6gN
        OHoRWN2q5tzNoC3Ubnf57lH3b8RzrBBHCc85rhT065y26gvg6NC+u8g3cpQWZ12VN+MhG3DEIhAl8el7
        W4TawwzeQuwhV9xzqmUJZgPtrByv+EatnxmESuAq+8aOuCNzdn++kFYhLk58zAcylbPrcTXRpyPflppT
        KGNt26/9spW+uj+nw2Dd2YecNz7jnr82Y+n1sN1/+a+OKmMWsMwGXuvW76ZFD37vO7dpKVTi7AxdmvD2
        HxMh8B+alZje3M5303Xa2y2HHevejtB6iTL9r05l74tvYfH4c8qCuZN1igzG8nJB3uQ5IG+2Umfxf1Mt
        tE+5rdDKuzN+4wO2wxRsx/AbJyFID3OsY4XY4ri6fzXDMRcvu87JGBx3uUEZFvpGbjpL4Ac2CN8QxQeP
        BoU7Hs10W/OajN94jUsDnmLYwUJjJq3Yu3dOOq46A6N6wW/lxen37q/HkYfxdxR/8Kj39n9Lzg7TcREl
        wQHfSxwFd2nGAFnhjteetjd0EbjgIFlaRFFSpqvwxC/v7b+xne7U+ttusYNGOBQEFvZyy3MGZu28fNum
        66VMz6PGSb/F+hmSZWS8y3FijmP09GSrE2AB07ImvyRnb/7dFfOUj/uAqQZNuSYvzAj8cU7H7Ug5Bwi0
        RsMSv0z4vRkD5v+SpUCSlVkd40HjnQGwqSWUZb39j5sWQYuCgOAfAG8WMJ0cNZ45aK5xKdozYxo26637
        17BS31m/40rLQmXtD5C+ORtpu0/KOS3Y+QM2SkSgGoxT9WYvdmSRnXe4MifP4MVua5PYfwAPb1fgZW3O
        47vQnfBTG4MpdM2b9tvgPz7HmbkqqXcYhKz9AdouBeJB8r422ZkXJaf/VINRDqaWswTXtDd/Xg7JV9xu
        BlN/gM7raC3m+ek2+QW6lt7VP/57mFPq0LYl7bs3s0NO8mpKXJ6eJMTgB+hWBNa3nIA8EdDttEPdyb/D
        GGDeGYJun39POyosr40/T84jTE9TBoA2VJtFQD3mX+2QbqxltnaqJycDB2VMs/2BH6XbfCfl7PP7g/+Z
        USO3BAC6YjYWgsYafwOxz3Uo23ar2Ee0vr47+NNN06f6Pmg0rSPgDfxlVk36ug4p0Drt3yEZ/OO1YwEw
        EcwETVV917Dajfd1GHh/sDP/dhMBWN3bXvTe4vkDvjUDNEpEROMTnib2Xqt1uLLDcWPnuzW/yywFgD6o
        NC8HNGvvdV0e4a177t/TEl9iu9vW4Uy1u/Rl/Z71rFTXW20JclsX36nJSx/wcxeI9QcYkCiYU7FpO6vW
        9FCXFYnuszJjehrxGWLvsgIvB1hK8MtMWPTI8I/alt3Pco6Oy7OfJCcIJfv8UcF1DAAWPL4n3Tz/b7AQ
        4X7Kta2yOINH7O/KPsud3WQxC8vKckACgLdOj7wj22xqf6Tl3K8cYp1D3YI8TX0DU3Z0mNu9AIDSZwNz
        irmqEPyj2HdsLV7GoL/fiomqX2FrEaKaq1nIWx9gyNTm+gZ03a0RhLvYtPwS2x7st8T7Stvnv9Le9nvV
        4+POqgHTfYAxWxokyUFNYqB+gqeIvdQE4fO2M6ABOjdYWa7brFy3ln//ldiPzcF4ojkG9TSftSqNE4Ir
        jbMlGfoAY7g0qDSCgPzZQfzWDuX/X2JbfBsnCUWVJ1sK8qZWoVcPBonCOfEDQXzliFsMMJnC0LKL0NHG
        Id0YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARsn/A7SG+SC6bL/yAAAAAElFTkSuQmCC
</value>
  </data>
</root>